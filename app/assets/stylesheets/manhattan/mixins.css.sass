// Mixins
// ------------------------------------------------------

// Create the grid for a given size
// This will loop over the number of columns and create a css class
// for each. If it's the last gride size, then let's not add a float
@mixin grid-core($size)
  @for $i from 1 through $grid-columns
    .col-#{$size}-#{$i}
      // Ignore float for the largest grid size
      @if $i < $grid-columns
        float: left
      @include span-columns($i)

    
    // If it's not the screen-xs, then let's add push and pull helper classes
    @if $size != "xs"
      .col-#{$size}-push-#{$i}
        left: flex-grid($i, $grid-columns) + flex-gutter($grid-columns)
      .col-#{$size}-pull-#{$i}
        right: flex-grid($i, $grid-columns) + flex-gutter($grid-columns)


    // Create the collapse classes, i.e., .col-lg-collapse-2
    .col-#{$size}-collapse-#{$i}
      @include span-columns($i, collapse)


    // Offsetting, i.e., .col-sm-offset-2
    .col-#{$size}-offset-#{$i}
      @include shift($i)


// Omega Core builder
@mixin omega-core($size)
  @for $i from 1 through $grid-columns
    .omega-#{$size}-#{$i}
      [class^="col-"],
      [class*=" col-"]
        @include omega(#{$i}n)